{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "Complete schema for pipeviz messages.",
    "type": "object",
    "properties": {
        "environments": {
            "type": "array",
            "minItems": 1,
            "items": { "$ref": "#/definitions/environment" }
        },
        "logic-states": {
            "type": "array",
            "minItems": 1,
            "items": { "$ref": "#/definitions/logic-state" }
        },
        "datasets": {
            "type": "array",
            "minItems": 1,
            "items": { "$ref": "#/definitions/dataset" }
        },
        "additionalProperties": false
    },
    "definitions": {
        "environment": {
            "title": "Environment",
            "description": "A representation of an environment - physical, virtual, or container.",
            "type": "object",
            "properties": {
                "type": {
                    "enum": [ "physical", "virtual", "container" ],
                    "default": "virtual"
                },
                "os": {
                    "enum": [ "windows", "unix" ],
                    "default": "unix"
                },
                "address": {
                    "$ref": "#/definitions/address"
                },
                "nickname": {
                    "type": "string",
                    "description": "A nickname identifying this environment. Nicknames can be used as referents for defining the hierarchical relationship between an environment and its contents, but not for real network/addressable relationships. Need not correspond to any real state. Nicknames co-exist in a global namespace for all environments known to any pipeviz instance, so pick them wisely."
                },
                "provider": {
                    "type": "string"
                },
                "logic-states": {
                    "type": "object",
                    "patternProperties": {
                        "^(/[^/]+)+$": { "$ref": "#/definitions/logic-state" }
                    }
                },
                "processes": {
                    "type": "array",
                    "minItems": 1,
                    "items": { "$ref": "#/definitions/process" }
                },
                "datasets": {
                    "type": "object",
                    "patternProperties": {
                        ".*": { "$ref": "#/definitions/dataset" }
                    }
                },
                "additionalProperties": false
            },
            "anyOf": [
                { "required": [ "nickname" ] },
                { "required": [ "address" ] }
            ]
        },
        "address": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string",
                    "format": "host-name"
                },
                "ipv4": {
                    "type": "string",
                    "format": "ipv4"
                },
                "ipv6": {
                    "type": "string",
                    "format": "ipv6"
                }
            },
            "anyOf": [
                { "required": [ "hostname" ] },
                { "required": [ "ipv4" ] },
                { "required": [ "ipv6" ] }
            ],
            "additionalProperties": false
        },
        "logic-state": {
            "type": "object",
            "properties": {
                "type": {
                    "enum": [ "binary", "code", "library" ]
                },
                "path": { "type": "string" },
                "nick": { "type": "string" },
                "lgroup": { "type": "string" },
                "id": {
                    "type": "object",
                    "oneOf": [
                        {
                            "properties": {
                                "repository": { "type": "string" },
                                "commit": { "type" : "string" }
                            },
                            "required": [ "repository", "commit" ]
                        },
                        {
                            "properties": {
                                "version": { "type": "string" }
                            },
                            "required": [ "version" ]
                        },
                        {
                            "properties": {
                                "semver": { "type": "string" }
                            },
                            "required": [ "semver" ]
                        }
                    ]
                },
                "datasets": {
                    "type": "array",
                    "minItems": 1,
                    "items": { "$ref": "#/definitions/conn-data" }
                }
            },
            "additionProperties": false,
            "required": [ "path", "id" ]
        },
        "conn-data": {
            "type": "object",
            "oneOf": [
                {
                    "properties": {
                        "name": { "type": "string" },
                        "type": { "enum": [ "mediated" ] },
                        "subset": { "type": "string" },
                        "interaction": {
                            "enum": [ "rw", "ro" ]
                        },
                        "rel": { "$ref": "#/definitions/connection" }
                    },
                    "required": [ "interaction", "type", "rel" ]
                },
                {
                    "properties": {
                        "name": { "type": "string" },
                        "type": { "enum": [ "file" ] },
                        "subset": { "type": "string" },
                        "interaction": {
                            "enum": [ "rw", "ro" ]
                        },
                        "path": { "type": "string" }
                    },
                    "required": [ "interaction", "type", "path" ]
                }
            ],
            "additionalProperties": false
        },
        "connection": {
            "type": "object",
            "description": "anu kind of inter-process communication path. this needs a ton of work.",
            "oneOf": [
                {
                    "properties": {
                        "type": { "enum": [ "net" ] },
                        "hostname": {
                            "type": "string",
                            "format": "host-name"
                        },
                        "port": { "type": "integer" }
                    }
                }
            ],
            "additionalProperties": false
        },
        "process": {},
        "dataset": {}
    }
}
